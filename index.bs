<pre class='metadata'>
Title: Requirements for Data
Shortname: nde-data
Level: 1
Status: LS
Markup Shorthands: css yes, markdown yes
URL: https://netwerk-digitaal-erfgoed.github.io/requirements-data/
Editor: 
    David de Boer, Netwerk Digitaal Erfgoed https://www.netwerkdigitaalerfgoed.nl, david@ddeboer.nl, https://github.com/ddeboer
Abstract: This document prescribes a data model to be used when publishing linked data. 
    By publishing data according to this model, data owners enable users and software developers 
</pre>

Introduction {#intro}
===============

Issue: Please don’t rely on this document yet as it’s still under discussion and development. 

This document prescribes the [generic data model](https://netwerk-digitaal-erfgoed.github.io/cm-implementation-guidelines/#generic-data-model)
to be used when publishing linked data in the Dutch heritage network.
The model is designed as a Schema.org application profile.
It is based on:

1. the current state of datasets in the heritage network,
    as observed in the [Dataset Knowledge Graph](https://github.com/netwerk-digitaal-erfgoed/dataset-knowledge-graph),
    particularly the <a href="https://triplestore.netwerkdigitaalerfgoed.nl/sparql?savedQueryName=Property%20partitions%20per%20class&owner=admin">property partitions analysis</a>;
2. the needs of service platform builders for processing and presenting the data.

Examples {#examples}
--------------------

RDF examples are in the [[JSON-LD]] RDF serialization, but publishers *MAY* use any other RDF serialization format,
such as [[Turtle]] or [[N3]].

Data model {#data-model}
===============

Publishers *MUST* publish data using the classes and properties described below.

However, these classes and properties constitute a generic data model that, in most cases, will only be a subset of the published data.
Therefore, publishers *SHOULD* use more classes and properties as needed, either from the Schema.org or other ontologies.
In other words, publishers are free to publish their data in any [domain-specific data model](https://netwerk-digitaal-erfgoed.github.io/cm-implementation-guidelines/#domain-data-model)
alongside the generic data model presented here. This may 

<div class="example">
    Redundant but useful modelling of name/label and author/creator:

    <pre highlight=json-ld>
        {
          "@context": {
            "schema": "https://schema.org/",
            "edm": "http://www.europeana.eu/schemas/edm/",
            "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
            "dcterms": "http://purl.org/dc/terms/"
          }
          "@id": "https://literatuurmuseum.nl/id/123456789"
          "@type": ["schema:CreativeWork", "schema:VisualArtwork"],
          "schema:name": "Het fluitketeltje en andere versjes",
          "rdfs:label": "Het fluitketeltje en andere versjes",
          "schema:author": {
            "@type": "schema:Person",
            "@id": "http://data.rkd.nl/artists/8342"
          },
          "dcterms:creator": {
            "@type": "dcterms:Agent",
            "@id": "http://data.rkd.nl/artists/8342"
          }
    </pre>
</div>


Classes {#classes}
--------------------

Publishers *MUST* type each published resource as one or more of the following classes.

Publishers *SHOULD* use more fine-grained classes alongside these top-level classes.

<div class="example">
    A photograph is typed as both top-level schema:CreativeWork and the more specific schema:Photograph:

    <pre highlight=json-ld>
        {
          "@context": "https://schema.org/",
          "@id": "https://example.com/dataset1/resource1"
          "@type": ["CreativeWork", "Photograph"]
        }
    </pre>
</div>

### CreativeWork ### {#creative-work}

### Event ### {#event}

### MediaObject ### {#media-object}

Issue: Should we only have MediaObject or the more specific types VideoObject, AudioObject, ImageObject etc., too?

### Organization ### {#organization}

### Person ### {#person}

### Place ### {#place}

Properties {#properties}
--------------------

Issue: How to describe dates? Require only very weak schema:temporal?

### name (required) ### {#name}

Issue: Use schema:name and/or rdfs:label?

### description ### {#description}

### image ### {#image}

### license ### {#license}

Issue: Does license make sense on the level of individual resources? Or perhaps only on certain types of resources, such as media?

### author ### {#author}

Use this instead of schema:creator.

Where available, reference a person from the Network of Terms.

### geo ### {#geo}

<div class="example">
    A place with coordinates:

    <pre highlight=json-ld>
        {
          "@context": "https://schema.org",
          "@type": "Place",
          "geo": {
            "@type": "GeoCoordinates",
            "latitude": "40.75",
            "longitude": "-73.98"
          },
        }
    </pre>
</div>
